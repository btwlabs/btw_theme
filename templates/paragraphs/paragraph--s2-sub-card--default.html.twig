{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'd-flex',
  'card-item',
  paragraph.field_sub_card_extra_classes.0.value,
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
] %}
{% set has_card_body = (not paragraph.field_sub_card_title is empty) or (not paragraph.field_sub_card_body is empty) or (not paragraph.field_sub_card_link.title is empty) %}


  <div {{ attributes.addClass(classes) }}>
    {{ title_prefix }}
    {{ title_suffix }}

    {% if not paragraph.field_sub_card_link is empty %}
    <a href="{{ paragraph.field_sub_card_link.0.url }}" target="{% if paragraph.field_sub_card_link.0.options.attributes.target == '_self' or paragraph.field_sub_card_link.0.options.attributes.target == '_none'%}_parent{% else %} {{ paragraph.field_sub_card_link.0.options.attributes.target }}{% endif %}">
      {% endif %}

      <div class="card{% if use_fa == 'fa' %} has-fa-icon{% elseif is_svg %} icon{% else %} photo{% endif %}{% if has_card_body %} has-card-body{% endif %}">
        {% if use_fa %}
          <div class="card-fa-icon">
            {{ paragraph.field_text_icon_code.0.value | raw }}
          </div>
        {% else %}
          {% if not paragraph.field_sub_card_image is empty %}
            <div class="card-image">
              {% if is_svg %}
                <img src="{{ base_url ~ file_url(paragraph.field_sub_card_image.0.entity.fileuri) }}" alt="{{ paragraph.field_sub_card_image.0.alt }}">
              {% else %}
                {{ content.field_sub_card_image }}
              {% endif %}
            </div>
          {% endif %}
        {% endif %}

        {% if has_card_body %}
          <div class="card-body">
            <div class="card-text-group">
              {% if (paragraph.field_sub_card_title is not empty) and (paragraph.field_sub_card_title.0.value != ' ') %}
                <h3 class="card-title">{{ content.field_sub_card_title }}</h3>
              {% endif %}
              {% if not paragraph.field_sub_card_body is empty %}
                <div class="card-text">{{ paragraph.field_sub_card_body.0.value|raw }}</div>
              {% endif %}
            </div>
              {% if not paragraph.field_sub_card_link.title is empty %}
                <div class="card-link {{ paragraph.field_sub_card_link.0.options.attributes.class }}">
                  {{ paragraph.field_sub_card_link.title }}
                </div>
              {% endif %}
          </div>
        {% endif %}

      </div>

    {% if not paragraph.field_sub_card_link is empty %}
      </a>
    {% endif %}

  </div>

