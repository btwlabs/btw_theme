{#
/**
 * @file
 * Hero. 2 column, Main Image left, Hero Content (text) Right.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

  {% set parent = paragraph.getParentEntity().id %}
  {% set classes = [
    'section',
    'section-hero',
    'hero-2-col-section',
    'hero-right-text-left-image',
    paragraph.field_hero_classes.0.value,
    has_parallax ? 'has-parallax',
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ] %}

  <!-- Start: Hero Section -->
  <section {{ attributes.addClass(classes) }}>
    {{ title_prefix }}
    {{ title_suffix }}
    <div class="hero-wrapper" id="top-{{ paragraph.id() }}">
      {% if paragraph.field_mp4_video.0 is not empty or paragraph.field_webm_video.0 is not empty %}
      <video muted loop autoplay width="auto" height="auto" {% if not paragraph.field_hero_image.0 is empty %}poster="{{ base_url ~ file_url(paragraph.field_hero_image.0.entity.fileuri) }}"    {% endif %}>
        {% if not paragraph.field_webm_video.0 is empty %}<source type="video/webm" src="{{ base_url ~ file_url(paragraph.field_webm_video.0.entity.fileuri) }}">{% endif %}
        {% if not paragraph.field_mp4_video.0 is empty %}<source type="video/mp4" src="{{ base_url ~ file_url(paragraph.field_mp4_video.0.entity.fileuri) }}">{% endif %}
      </video>
      {% endif %}
      {% if not paragraph.field_hero_image.0 is empty %}
        <div class="hero-image">
            {{ content.field_hero_image }}
        </div>

      {% endif %}

      {% if not paragraph.field_hero_mobile_image is empty %}
        <!-- Start: Hero Mobile Image -->
        <div class="mobile-image-wrapper">
          {{ content.field_hero_mobile_image }}
        </div>
        <!-- End: Hero Mobile Image -->
      {% endif %}

      <div class="hero-overlay"></div>

      <div class="hero-content-wrapper">
        {% if not paragraph.field_hero_logo.0 is empty %}
          <div class="hero-logo-wrapper"><img src="{{ base_url ~ file_url(paragraph.field_hero_logo.0.entity.fileuri) }}" alt="{{ paragraph.field_hero_logo.0.alt }}"></div>
        {% endif %}
        <div class="hero-title-wrapper">
          {% if not paragraph.field_hero_heading.0.value is empty %}
            {{ content.field_hero_heading }}
          {% endif %}
          {% if not paragraph.field_hero_long_sub_heading.0.value is empty %}
            {{ content.field_hero_long_sub_heading }}
          {% endif %}
          {% if not paragraph.field_hero_button.0.value is empty %}
            <div class="hero-link">{{ content.field_hero_button.0 }}</div>
          {% endif %}
        </div>

      </div><!-- End: Hero Content Wrapper -->

    </div>
  </section>
  <!-- End: Hero Section -->

