{#
/**
 * @file
 * Left text full bg image story block.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set has_parallax = 'parallax' in paragraph.field_ff_sb_use_parallax.0.value %}
{% set image_effect = ('fixed' in paragraph.field_ff_sb_use_parallax.0.value ? 'fixed' : (has_parallax ? 'parallax-item' : 'no-effect')) %}
{% set classes = [
  'section',
  'section-story-block',
  paragraph.field_story_block_classes.0.value,
  has_parallax ? 'has-parallax',
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
] %}

  {% set view_mode = view_mode|replace({'_':'-'}) %}
  <section {{ attributes.addClass(classes) }}>
    {{ title_prefix }}
    {{ title_suffix }}
    <div class="story-block {{ view_mode }} {{ paragraph.field_story_block_image_overlay_.0.value }} clearfix">

      {% if not paragraph.field_story_block_images is empty %}
        {{ content.html_head }}
        <!-- Start: Full BG Image -->
        <div class="lazy-load-bg-image d-none d-md-block {{ image_effect }}"></div>
        <!-- End: Full BG Image -->
      {% endif %}

      <div class="image-overlay"></div>
      <div class="story-block-inner" >

          <div class="group-left">
            {% if not paragraph.field_story_block_images.0 is empty %}
              <div class="story-block-mobile-image">
                <img src="{{ base_url ~ file_url(paragraph.field_story_block_images.0.entity.fileuri | image_style('story_block_small_fp')) }}" alt="{{ paragraph.field_story_block_images.0.alt }}" typeof="foaf:Image">
              </div>
            {% endif %}

            <div class="text-wrapper">
              {% if not paragraph.field_title.0.value is empty %}
                {{ content.field_title }}
              {% endif %}
              {% if not paragraph.field_story_block_text.0.value is empty %}
                <div class="story-block-text">
                  <div>
                    {{ content.field_story_block_text }}
                  </div>
                </div>
              {% endif %}
              {% if not paragraph.field_story_block_link is empty %}
                <div class="story-block-link">
                  {{ content.field_story_block_link }}
                </div>
              {% endif %}
              {% if not paragraph.field_story_block_video is empty %}
                <div class="story-block-video">
                  {{ content.field_story_block_video }}
                </div>
              {% endif %}
            </div>
          </div>

          <div class="group-right">
            {% if not paragraph.field_story_block_extra_image.0 is empty %}
              <div class="story-block-extra-image">
               {{ content.field_story_block_extra_image }}
              </div>
            {% endif %}
          </div>

      </div>
    </div>
  </section>


