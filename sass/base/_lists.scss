//----------------------------------------------
//
//	LISTS - general styles for ordered and 
//          unordered lists and grids
//
//	location: 
//      /sass/base/_lists.scss
//
//----------------------------------------------


/*-------------------------------------------

 LISTS - defaults for standard formatting

--------------------------------------------*/

ol {
	li {
		list-style-type: decimal;
	}
	
	ol {
		padding-top: 0.5em;
		
		li {
			list-style-type: upper-roman;
		}
	}
}

ul {
	li {
		list-style: disc;
	}
	
	ul {
		padding-top: 0.5em;
		
		li {
			list-style: circle;
		}
	}
}

.node {
	ol,
	ul {
		padding-left: 2em;
	}
}

// Lists in story blocks
.story-block-text {
	ul li {
		margin-bottom: .75em;
		line-height: 1.3;
		padding-left: 10px;
	}
}

//--------------------------
//	Definition Lists
//--------------------------

dt, 
.admin h3 {
	font-size: 1.125rem;
	margin: 0;
}

dd {
	padding-left: 10px;
	font-size: 0.938rem;
	font-style: italic;
	margin-bottom: 20px;
}

//--------------------------
//	LIST formatting classes
//--------------------------

.upper-roman {
	list-style-type: upper-roman;
	font-size: 18px;

	> li {
		list-style-type: upper-roman;
		padding-left: 8px;
	}
}	
.upper-alpha {
	list-style-type: upper-alpha;

	> li {
		list-style-type: upper-alpha;
		padding-left: 8px;
	}
}	
.decimal {
	list-style-type: decimal;

	> li {
		list-style-type: decimal;
		padding-left: 8px;
	}
}

//---------------------------------------------------------
//---------------------------------------------------------
//
//	LIST & GRID styles - without standard list formatting
//  
//---------------------------------------------------------
//---------------------------------------------------------


// reset/override specificity on node ul's
.node .grid,
.node .css-grid {
	margin: 0 0 3rem 0;
	padding: 0;
}

//----------------------------------
//
//	FLEXBOX GRID -- for items to display 
//			in a grid layout using
//			FLEXBOX ONLY specs
// 
//----------------------------------

.grid {
	// resets values for when class is placed on <ul>
	margin: 0 0 3rem 0;
	padding: 0;
	
	display: flex;
	flex-wrap: wrap;
	//justify-content: space-between;	
	
	li,
	.grid-item {
		list-style-type: none;

		/*@include media-breakpoint-down(sm) {
			@include flexgrid-1;
		}
		@include media-breakpoint-only(md) {
			@include flexgrid-2;
		}
		@include media-breakpoint-only(lg) {
			@include flexgrid-3;
		}
		@include media-breakpoint-up(xl) {
			@include flexgrid-4;
		}*/
	}
}


//----------------------------------
//
//	CSS GRID -- for items to display 
//				in a grid layout using
//				CSS GRID specs
// 
//----------------------------------

.css-grid {
	// resets values for when class is placed on <ul>
	margin: 0 0 3rem 0;
	padding: 0;
	display: grid;
	grid-template-columns: repeat(auto-fit,minmax(350px, 1fr));
	grid-gap: 40px 3.8%;
	
	li,
	.grid-item {
		list-style-type: none;
		padding: 0;
		margin: 0;
		position: relative;
	}
}


//-------------------------------------
//
//	Items within a grid (image, title)
//
//-------------------------------------

.grid-item {
	.grid-item-image {
		margin-bottom: 20px;
	}
	.grid-item-titles {
		text-align: left;
		
		h2, 
		h2.title {
			@include responsive-card-title;
			margin-bottom: 0.5em;
		}
		
		h3 {
			@include responsive-body-text;
			font-weight: normal;
		}
	}
}

	

//----------------------------------
//
//	LISTS - items to display top-bottom
//
//----------------------------------

.list {
	padding: 0;
	
	ul {
		margin: 0;
		padding: 0;
	}
	
	.list-item {
		padding: calc($vert-spacing-unit / 2) 0;
		@include border-bottom($border-color);
		list-style-type: none;
		margin: 0;
		position: relative;
		overflow: hidden;
		
		&:first-child {
			padding-top: 0;
		}
		&:last-child {
			border-bottom: 0;
		}
	}
}